<?xml version="1.0" encoding="UTF-8"?>
<settings>
  <data_type>xml</data_type>                                     <!-- [xml] (xml / csv) -->
  <pie>
    <inner_radius>40</inner_radius>  
    <gradient>radial</gradient>                               <!-- [] (linear/radial) Allows slices to be filled with gradient colors -->
    <gradient_ratio>0,0,0,-50,0,0,0,-50</gradient_ratio>        <!-- [0,-40] (Numbers from (-255 to 255) separated by commas) Controls the gradient ratio -->
  </pie>
  
  <animation>
    <start_time>2</start_time>                                <!-- [0] (Number) fly-in time in seconds. Leave 0 to appear instantly -->
    <start_effect>strong</start_effect>                       <!-- [bounce] (bounce, regular, strong) -->
    <start_radius></start_radius>                             <!-- [500%] (Number / Number%) if left empty, will use pie.radius * 5 -->
    <start_alpha>0</start_alpha>                              <!-- [0] (Number) -->
    <sequenced>true</sequenced>                               <!-- [false] (true / false) Whether the slices should appear all together or one after another -->                    
    <pull_out_on_click>true</pull_out_on_click>              <!-- [true] (true / false) whether to pull out slices when user clicks on them (or on legend entry) -->
    <pull_out_time>1.5</pull_out_time>                        <!-- [0] (number) pull-out time (then user clicks on the slice) -->
    <pull_out_effect>Bounce</pull_out_effect>                 <!-- [bounce] (bounce, regular, strong) -->
    <pull_out_radius></pull_out_radius>                       <!-- [20%] (Number / Number%) how far pie slices should be pulled-out then user clicks on them -->
    <pull_out_only_one></pull_out_only_one>                   <!-- [false] (true / false) if set to true, when you click on any slice, all other slices will be pushed in -->        
  </animation>
 
  <legend>                                                    <!-- LEGEND -->
    <enabled>false</enabled>   
   </legend>

  <balloon>                                                   <!-- BALLOON -->
    <enabled></enabled>                                       <!-- [true] (true / false) -->
    <color></color>                                           <!-- [] (hex color code) balloon background color. If empty, slightly darker then current slice color will be used -->
    <alpha>80</alpha>                                         <!-- [80] (0 - 100) -->
    <text_color></text_color>                                 <!-- [#FFFFFF] (hex color code) -->
    <text_size></text_size>                                   <!-- [text_size] (Number) -->    
    <show>
       <![CDATA[{title}: {value} mln. ({percents}%) <br>{description}]]>        <!-- [{title}: {percents}% ({value}) <br>{description}] ({value} {title} {percents} {description}) You can format any data label: {value}  -->
    </show>
    <max_width>300</max_width>                                <!-- [220] (Number) The maximum width of a balloon -->
    <corner_radius>5</corner_radius>                          <!-- [0] (Number) Corner radius of a balloon. If you set it > 0, the balloon will not display arrow -->
    <border_width>3</border_width>                            <!-- [0] (Number) -->
    <border_alpha>50</border_alpha>                           <!-- [balloon.alpha] (Number) -->
    <border_color>#000000</border_color>                      <!-- [balloon.color] (hex color code) -->    
  </balloon>

  <data_labels>
    <show>
       <![CDATA[{title}: {percents}%]]>                       <!-- [] ({value} {title} {percents} {description}) You can format any data label: {value}  -->
    </show>                        
  </data_labels>

  <export_as_image>
    <file>../chart/export.php</file>
    <alpha>100</alpha>
  </export_as_image>

  <context_menu>
     <default_items>
       <zoom>true</zoom>
       <print>true</print>
     </default_items>
  </context_menu>

</settings>
